/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Escrow, EscrowInterface } from "../../Escrow_Dummy.sol/Escrow";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "indexedRequestId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "nonIndexRequestId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "budget",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payerAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "payeeAddress",
        type: "address",
      },
    ],
    name: "AddHoldRecordEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "indexedRequestId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "nonIndexRequestId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "effective_cost",
        type: "string",
      },
    ],
    name: "ProcessHoldRecordEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "indexedRequestId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "nonIndexRequestId",
        type: "string",
      },
    ],
    name: "ReleaseHoldRecordEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "budget",
        type: "uint256",
      },
    ],
    name: "SimpleUpdatedEvent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "indexedRequestId",
        type: "string",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payerAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "payeeAddress",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "nonIndexRequestId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "transferAmount",
        type: "uint256",
      },
    ],
    name: "TransferPaymentEvent",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "requestId",
        type: "string",
      },
      {
        internalType: "string",
        name: "budget",
        type: "string",
      },
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        internalType: "address",
        name: "payerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "payeeAddress",
        type: "address",
      },
    ],
    name: "add_hold_record",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "holdMapping",
    outputs: [
      {
        internalType: "string",
        name: "budget",
        type: "string",
      },
      {
        internalType: "string",
        name: "currency",
        type: "string",
      },
      {
        internalType: "address",
        name: "payer",
        type: "address",
      },
      {
        internalType: "address",
        name: "payee",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "requestId",
        type: "string",
      },
      {
        internalType: "string",
        name: "effectiveCost",
        type: "string",
      },
    ],
    name: "process_hold_record",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "requestId",
        type: "string",
      },
    ],
    name: "release_hold_record",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "simpleHoldMapping",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "requestId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "budget",
        type: "uint256",
      },
    ],
    name: "update_mappingthen_success",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526040518060800160405280604051806020016040528060008152508152602001604051806020016040528060008152508152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152506002600082015181600001908051906020019061008f92919061014f565b5060208201518160010190805190602001906100ac92919061014f565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505034801561014957600080fd5b506101ec565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061019057805160ff19168380011785556101be565b828001600101855582156101be579182015b828111156101bd5782518255916020019190600101906101a2565b5b5090506101cb91906101cf565b5090565b5b808211156101e85760008160009055506001016101d0565b5090565b610f4c80620001fc6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c80631405dcd51461006757806326c6739e146102415780637100e8db1461028357806377efb706146102bb578063e495bd9314610334578063eb2e308f14610497575b600080fd5b6101206004803603602081101561007d57600080fd5b810190808035906020019064010000000081111561009a57600080fd5b8201836020820111156100ac57600080fd5b803590602001918460018302840111640100000000831117156100ce57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610565565b6040518080602001806020018573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff168152602001838103835287818151815260200191508051906020019080838360005b8381101561019c578082015181840152602081019050610181565b50505050905090810190601f1680156101c95780820380516001836020036101000a031916815260200191505b50838103825286818151815260200191508051906020019080838360005b838110156102025780820151818401526020810190506101e7565b50505050905090810190601f16801561022f5780820380516001836020036101000a031916815260200191505b50965050505050505060405180910390f35b61026d6004803603602081101561025757600080fd5b810190808035906020019092919050505061071b565b6040518082815260200191505060405180910390f35b6102b96004803603604081101561029957600080fd5b810190808035906020019092919080359060200190929190505050610733565b005b610332600480360360208110156102d157600080fd5b81019080803590602001906401000000008111156102ee57600080fd5b82018360208201111561030057600080fd5b8035906020019184600183028401116401000000008311171561032257600080fd5b909192939192939050505061078d565b005b610495600480360360a081101561034a57600080fd5b810190808035906020019064010000000081111561036757600080fd5b82018360208201111561037957600080fd5b8035906020019184600183028401116401000000008311171561039b57600080fd5b9091929391929390803590602001906401000000008111156103bc57600080fd5b8201836020820111156103ce57600080fd5b803590602001918460018302840111640100000000831117156103f057600080fd5b90919293919293908035906020019064010000000081111561041157600080fd5b82018360208201111561042357600080fd5b8035906020019184600183028401116401000000008311171561044557600080fd5b9091929391929390803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610813565b005b610563600480360360408110156104ad57600080fd5b81019080803590602001906401000000008111156104ca57600080fd5b8201836020820111156104dc57600080fd5b803590602001918460018302840111640100000000831117156104fe57600080fd5b90919293919293908035906020019064010000000081111561051f57600080fd5b82018360208201111561053157600080fd5b8035906020019184600183028401116401000000008311171561055357600080fd5b9091929391929390505050610b0a565b005b600181805160208101820180518482526020830160208501208183528095505050505050600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106275780601f106105fc57610100808354040283529160200191610627565b820191906000526020600020905b81548152906001019060200180831161060a57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156106c55780601f1061069a576101008083540402835291602001916106c5565b820191906000526020600020905b8154815290600101906020018083116106a857829003601f168201915b5050505050908060020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905084565b60006020528060005260406000206000915090505481565b80600080848152602001908152602001600020819055507febbdbfc5c6293ebeb2748eb9b601443738aec6052d3a6cab6ef6f5f6783ad8f18282604051808381526020018281526020019250505060405180910390a15050565b818160405180838380828437808301925050509250505060405180910390207f33903a7db293ba85bbdfcd6aac70bc3639f1caa117c1392afc77e7856615ef5b838360405180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060405180910390a25050565b604051806080016040528087878080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050815260200185858080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505081526020018373ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff16815250600189896040518083838082843780830192505050925050509081526020016040518091039020600082015181600001908051906020019061092b929190610df2565b506020820151816001019080519060200190610948929190610df2565b5060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050878760405180838380828437808301925050509250505060405180910390207fc77be6052b2017437f48b3179608808529eb2735c5511f74ec6fb2209a14cc658989898989898989604051808060200180602001806020018673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff16815260200184810384528c8c82818152602001925080828437600081840152601f19601f82011690508083019250505084810383528a8a82818152602001925080828437600081840152601f19601f8201169050808301925050508481038252888882818152602001925080828437600081840152601f19601f8201169050808301925050509b50505050505050505050505060405180910390a25050505050505050565b73351bf8a33125a0c324d54bb47c71d25e4f35c6e773ffffffffffffffffffffffffffffffffffffffff1673ec8cfd6236b5c026778652c2ba0e7e6d0f0d3d0d73ffffffffffffffffffffffffffffffffffffffff16858560405180838380828437808301925050509250505060405180910390207f69ce881810308c8921aaa00f61836652d7264b0e4579e020edd14a80820c6d3d878761012c60405180806020018381526020018281038252858582818152602001925080828437600081840152601f19601f82011690508083019250505094505050505060405180910390a4600260018585604051808383808284378083019250505092505050908152602001604051809103902060008201816000019080546001816001161561010002031660029004610c3c929190610e72565b5060018201816001019080546001816001161561010002031660029004610c64929190610e72565b506002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550905050838360405180838380828437808301925050509250505060405180910390207fa7224b7e3ba49dd657ba3116f592bb86319069c54a48487f92056e391edaf03f858585856040518080602001806020018381038352878782818152602001925080828437600081840152601f19601f8201169050808301925050508381038252858582818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a250505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610e3357805160ff1916838001178555610e61565b82800160010185558215610e61579182015b82811115610e60578251825591602001919060010190610e45565b5b509050610e6e9190610ef9565b5090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610eab5780548555610ee8565b82800160010185558215610ee857600052602060002091601f016020900482015b82811115610ee7578254825591600101919060010190610ecc565b5b509050610ef59190610ef9565b5090565b5b80821115610f12576000816000905550600101610efa565b509056fea264697066735822122069061811e459b889a2fc14bd5d057c01c4c208c52e7fa218ba98ae7ebbfef21164736f6c63430007030033";

type EscrowConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EscrowConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Escrow__factory extends ContractFactory {
  constructor(...args: EscrowConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Escrow> {
    return super.deploy(overrides || {}) as Promise<Escrow>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Escrow {
    return super.attach(address) as Escrow;
  }
  override connect(signer: Signer): Escrow__factory {
    return super.connect(signer) as Escrow__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EscrowInterface {
    return new utils.Interface(_abi) as EscrowInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Escrow {
    return new Contract(address, _abi, signerOrProvider) as Escrow;
  }
}
